# This is a basic workflow to help you get started with Actions

name: AuthServer Master Dockerfile CI

env:
  MODULE_NAME: anan-authserver
  MODULE_VERSION: 2.1.0-SNAPSHOT
  MODULE_PROFILE: local
  MODULE_PATH: anan-cloudadviced/anan-platform/anan-authserver
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths:
      - '$MODULE_PATH/**'
  pull_request:
    branches: [ master ]
    paths:
      - '$MODULE_PATH/**'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout master branche
      uses: actions/checkout@v2
      with:
        ref: 'master'

    - name: Setup JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.6'
        architecture: x64

    - name: Build with Maven
      run: |
        mvn --batch-mode --errors --file $MODULE_PATH/pom.xml clean compile jar:jar spring-boot:repackage
        ls target/

    - name: build and push image
      run: |
        docker login --username=${{ secrets.dockerhub_user }} --password=${{ secrets.dockerhub_pass }}
        docker build ./$MODULE_PATH -t fosin/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/Dockerfile
        docker push fosin/$MODULE_NAME:$MODULE_VERSION
#    - name: Upload fatjar
#      uses: actions/upload-artifact@v1
#      with:
#        name: $MODULE_NAME-$MODULE_VERSION-$MODULE_PROFILE.jar
#        path: target/
#
#  deploy:
#    name: Deploy
#    needs: [build]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/download-artifact@v1
#        with:
#          name: $MODULE_NAME-$MODULE_VERSION-$MODULE_PROFILE.jar
#          path: target/

