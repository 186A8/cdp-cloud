name: anan-cloud Branches CI
on:
  push:
    branches:
      - '*'
    paths:
      - 'pom.xml'
      - 'anan-cloudresource/**'
      - 'anan-cloudadviced/pom.xml'
      - 'anan-cloudadviced/anan-platformapi/**'
      - 'deploy/mysql/**'
      - 'deploy/openjdk/**'
jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      #从11位截取GITHUB_REF变量中的分支号，例如:refs/heads/master，结果就是master
      - name: Set GITHUB_REF
        run: echo ::set-env name=BRANCHE_VERSION::$(echo ${GITHUB_REF:11})

      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCHE_VERSION }}
          fetch-depth: 2

      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set Build Modules
        run: |
          MODIFY_FILES=$(git diff --name-only HEAD~ HEAD)
          MODULES=""
          echo MODIFY_FILES: $MODIFY_FILES
          if [[ $MODIFY_FILES =~ "^pom.xml" || $MODIFY_FILES =~ " pom.xml$" ]]; then
             MODULES=${MODULES}",com.github.fosin.anan:anan-cloud"
          fi
          if [[ $MODIFY_FILES =~ "anan-cloudresource" ]]; then
             MODULES=${MODULES}",com.github.fosin.anan:anan-cloudresource"
          fi
          if [[ $MODIFY_FILES =~ "anan-cloudadviced/pom.xml" ]]; then
            MODULES=${MODULES}",com.github.fosin.anan:anan-cloudadviced"
          fi
          if [[ $MODIFY_FILES =~ "anan-platformapi" ]]; then
            MODULES=${MODULES}",com.github.fosin.anan:anan-platformapi"
          fi
          echo ::set-env name=MODIFY_FILES::$MODIFY_FILES
          echo ::set-env name=MODULE_LIST::${MODULES:1}
          echo MODULES: ${MODULES}
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        if: env.MODULE_LIST != ''
        with:
          #gpg_private_key: ${{ secrets.gpg_private_key }}
          #gpg_passphrase: ${{ secrets.gpg_passphrase }}
          nexus_username: ${{ secrets.center_nexus_username }}
          nexus_password: ${{ secrets.center_nexus_password }}
          #directory: "."
          maven_profiles: "sonatype-oss-release"
          maven_goals_phases: "clean package deploy:deploy"
          maven_args: "-Dmaven.javadoc.skip=true -pl ${{ env.MODULE_LIST }}"
          server_id: "sonatype-nexus-snapshots"
      - name: Docker Hub Login
        if: contains(env.MODIFY_FILES,'deploy/openjdk') || contains(env.MODIFY_FILES,'deploy/mysql')
        run: |
          docker login --username=${{ secrets.dockerhub_user }} --password=${{ secrets.dockerhub_pass }}
      # 创建adoptopenjdk11-openj9镜像
      - name: Docker build and push adoptopenjdk-11-jdk-openj9
        if: contains(env.MODIFY_FILES,'deploy/openjdk/11-openj9.Dockerfile') || contains(env.MODIFY_FILES,'entrypoint.sh') || contains(env.MODIFY_FILES,'sources.list')
        env:
          MODULE_NAME: adoptopenjdk
          MODULE_VERSION: 11-jdk-openj9
          MODULE_PATH: deploy/openjdk
        run: |
          docker build $MODULE_PATH -t fosin/$MODULE_NAME:$MODULE_VERSION -f $MODULE_PATH/11-openj9.Dockerfile
          docker push fosin/$MODULE_NAME:$MODULE_VERSION
      # 创建jdk11镜像
      - name: Docker build and push openjdk11
        if: contains(env.MODIFY_FILES,'deploy/openjdk/11.Dockerfile') || contains(env.MODIFY_FILES,'entrypoint.sh') || contains(env.MODIFY_FILES,'sources.list')
        env:
          MODULE_NAME: adoptopenjdk
          MODULE_VERSION: 11-jdk-hotspot
          MODULE_PATH: deploy/openjdk
        run: |
          docker build $MODULE_PATH -t fosin/$MODULE_NAME:$MODULE_VERSION -f $MODULE_PATH/11.Dockerfile
          docker push fosin/$MODULE_NAME:$MODULE_VERSION
      # 创建jdk8镜像
      - name: Docker build and push openjdk8
        if: contains(env.MODIFY_FILES,'deploy/openjdk/8.Dockerfile') || contains(env.MODIFY_FILES,'entrypoint.sh') || contains(env.MODIFY_FILES,'sources.list')
        env:
          MODULE_NAME: adoptopenjdk
          MODULE_VERSION: 8-jdk-hotspot
          MODULE_PATH: deploy/openjdk
        run: |
          docker build $MODULE_PATH -t fosin/$MODULE_NAME:$MODULE_VERSION -f $MODULE_PATH/8.Dockerfile
          docker push fosin/$MODULE_NAME:$MODULE_VERSION
      - name: Docker build and push mysql-leader
        if: contains(env.MODIFY_FILES,'deploy/mysql/leader')
        env:
          MODULE_NAME: mysql-leader
          MODULE_VERSION: 2.3
          MODULE_PATH: deploy/mysql/leader
        run: |
          docker build ./$MODULE_PATH -t fosin/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/7.Dockerfile
          docker push fosin/$MODULE_NAME:$MODULE_VERSION
      - name: Docker build and push mysql-follower
        if: contains(env.MODIFY_FILES,'deploy/mysql/follower')
        env:
          MODULE_NAME: mysql-follower
          MODULE_VERSION: 2.3
          MODULE_PATH: deploy/mysql/follower
        run: |
          docker build ./$MODULE_PATH -t fosin/$MODULE_NAME:$MODULE_VERSION -f ./$MODULE_PATH/7.Dockerfile
          docker push fosin/$MODULE_NAME:$MODULE_VERSION
