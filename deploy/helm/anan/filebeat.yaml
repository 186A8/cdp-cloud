image: elastic/filebeat:6.8.6
imagePullPolicy: IfNotPresent
resources:
  limits:
    memory: 200Mi
  requests:
    cpu: 1m
    memory: 100Mi
livenessProbe: {}
readinessProbe: {}
env:
  - name: ELASTICSEARCH_HOST
    valueFrom:
      configMapKeyRef:
        name: es-env
        key: serviceHeadless
  - name: ELASTICSEARCH_PORT
    valueFrom:
      configMapKeyRef:
        name: es-env
        key: port
  - name: ELASTICSEARCH_USERNAME
    valueFrom:
      configMapKeyRef:
        name: es-env
        key: username
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      configMapKeyRef:
        name: es-env
        key: password
#            - name: ELASTIC_CLOUD_ID
#              value:
#            - name: ELASTIC_CLOUD_AUTH
#              value:
args: [
  "-c", "/etc/filebeat.yml",
  "-e",
]
volumeMounts:
  - name: filebeat
    mountPath: /etc/filebeat.yml
    readOnly: true
    subPath: filebeat.yml
  - name: kubernetes
    mountPath: /usr/share/filebeat/inputs.d
    readOnly: true
    subPath: kubernetes.yml
  - name: data
    mountPath: /usr/share/filebeat/data
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
volumes:
  - name: filebeat
    configMap:
      name: filebeat-conf
      defaultMode: 0600
      items:
        - key: filebeat.yml
          path: filebeat.yml
  - name: kubernetes
    configMap:
      name: filebeat-conf
      defaultMode: 0600
      items:
        - key: kubernetes.yml
          path: kubernetes.yml
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
  - name: data
    hostPath:
      path: /root/deploy/filebeate
      type: DirectoryOrCreate
terminationGracePeriodSeconds: 30 #优雅关闭pod的等待时间，默认30s
securityContext:
  runAsUser: 0
persistence: {}
service: {}
daemonset:
  lables: {}
  updateStrategy:
    type: RollingUpdate
  minReadySeconds: 60  #滚动升级时60s后认为该pod就绪
clusterRole:
  lables: {}
  rules:
    - apiGroups: [""] # "" indicates the core API group
      resources:
        - namespaces
        - pods
      verbs:
        - get
        - watch
        - list
configmap:
  envs: {}
  confs:
    filebeat.yml: |-
      filebeat.config:
        inputs:
          # Mounted `filebeat-inputs` configmap:
          path: ${path.config}/inputs.d/*.yml
          # Reload inputs configs as they change:
          reload.enabled: false
        modules:
          path: ${path.config}/modules.d/*.yml
          # Reload module configs as they change:
          reload.enabled: false

      # To enable hints based autodiscover, remove `filebeat.config.inputs` configuration and uncomment this:
      #filebeat.autodiscover:
      #  providers:
      #    - type: kubernetes
      #      hints.enabled: true
      processors:
        - add_cloud_metadata:

      cloud.id: ${ELASTIC_CLOUD_ID}
      cloud.auth: ${ELASTIC_CLOUD_AUTH}

      output.elasticsearch:
        hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
        #username: ${ELASTICSEARCH_USERNAME}
        #password: ${ELASTICSEARCH_PASSWORD}
      #如果一个文件在某个时间段内没有发生过更新，则关闭监控的文件handle，默认1小时
      close_older: 30m
      #当文件名称有变化时，包括改名和删除，会自动关闭一个文件(windows独享)
      #force_close_files: true
      #没有新日志采集后多长时间关闭文件句柄，默认5分钟
      close_inactive: 5m
      #传输了3h后荏没有传输完成的话就强行关闭文件句柄，这个配置项是解决以上案例问题的key point；
      close_timeout: 3h
      #默认值是0表示不清理，不清理的意思是采集过的文件描述在registry文件里永不清理，在运行一段时间后，registry会变大，可能会带来问题
      clean_inactive: 72h
      #设置了clean_inactive后就需要设置ignore_older，且要保证ignore_older < clean_inactive
      ignore_older: 70h
    kubernetes.yml: |-
      - type: docker
        containers.ids:
        - "*"
        processors:
          - add_kubernetes_metadata:
              in_cluster: true
