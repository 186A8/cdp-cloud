rabbitmq:
  #  password: ""
  erlangCookie: SWQOKODSQALRPCLNMEQG
statefulset:
  updateStrategy:
    type: RollingUpdate
image: rabbitmq:3-management
imagePullPolicy: IfNotPresent
replicaCount: 1
resources:
  limits:
    memory: 512Mi
  requests:
    cpu: 1m
    memory: 256Mi
livenessProbe:
  exec:
    command: ["rabbitmqctl", "status"]
  initialDelaySeconds: 180
  periodSeconds: 10
  timeoutSeconds: 5
readinessProbe:
  exec:
    command: ["rabbitmqctl", "status"]
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
env:
  - name: TZ
    valueFrom:
      configMapKeyRef:
        name: mysql-leader-env
        key: anan.tz
  - name: RABBITMQ_DEFAULT_USER
    valueFrom:
      configMapKeyRef:
        name: rabbitmq-env
        key: username
  - name: RABBITMQ_DEFAULT_PASS
    valueFrom:
      configMapKeyRef:
        name: rabbitmq-env
        key: password
  - name: RABBITMQ_ERLANG_COOKIE
    valueFrom:
      configMapKeyRef:
        name: rabbitmq-env
        key: rabbitmqErlangCookie
  - name: HOSTNAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: RABBITMQ_USE_LONGNAME
    value: "true"
  - name: RABBITMQ_NODENAME
    valueFrom:
      configMapKeyRef:
        name: rabbitmq-env
        key: rabbitmqNodename
volumeMounts:
  - name: rabbitmq
    mountPath: /var/lib/rabbitmq/mnesia
  - name: config
    mountPath: /etc/rabbitmq
initContainers:
  - name: configmap-copy
    image: busybox
    command: ['/bin/sh', '-c', 'cp /etc/rabbitmq/files/* /etc/rabbitmq/']
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - name: rabbitmq-config
        mountPath: /etc/rabbitmq/files
      - name: config
        mountPath: /etc/rabbitmq
volumes:
  - name: config
    emptyDir: {}
  - name: rabbitmq-config
    configMap:
      name: rabbitmq-conf
      items:
        - key: rabbitmq.conf
          path: rabbitmq.conf
        - key: enabled_plugins
          path: enabled_plugins
persistence:
  size: 1G
  accessMode: ReadWriteOnce
  nfs:
    - server: 192.168.137.8
service:
  clusterIP: None
  type: NodePort
  ports:
    - port: 5672
      targetPort: 5672
      name: amqp
    - port: 15672
      targetPort: 15672
      nodePort: 15672
      name: cluster
role:
  rules:
    - apiGroups: [""]
      resources: ["endpoints"]
      verbs: ["get"]
terminationGracePeriodSeconds: 30
configmap:
  envs: {}
  confs: {}
