apiVersion: v1
kind: ConfigMap
metadata:
  name: base-cm
data:
  mysql.master.db.name: "nacos"
  mysql.master.port: "3306"
  mysql.slave.port: "3306"
  mysql.master.user: "nacos"
  mysql.master.password: "nacos"
  mysql.root.password: "local"
  mysql.replication.user: "nacos_ru"
  mysql.replication.password: "nacos_ru"
  tz: "Asia/Shanghai"
  user: "anan"
  password: "local"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-cm
data:
  mysqld.cnf: |
    [mysqld]
    pid-file        = /var/run/mysqld/mysqld.pid
    socket          = /var/run/mysqld/mysqld.sock
    datadir         = /var/lib/mysql
    #log-error      = /var/log/mysql/error.log
    # By default we only accept connections from localhost
    #bind-address   = 127.0.0.1
    # Disabling symbolic-links is recommended to prevent assorted security risks
    symbolic-links=0
    #SHOW GLOBAL VARIABLES LIKE 'log_timestamps';默认为UTC，修改为SYSTEM
    log_timestamps=SYSTEM
    #不区分大小写
    lower_case_table_names=1
    #skip-grant-tables
    #skip-name-resolve
    #服务器端和客户端字符集
    character_set_server=utf8mb4

    [client]
    default-character-set = utf8mb4

    [mysql]
    default-character-set = utf8mb4
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-master
  labels:
    name: mysql-master
spec:
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 30001
  type: NodePort
  selector:
    name: mysql-master
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-slave
  labels:
    name: mysql-slave
spec:
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 30002
  type: NodePort
  selector:
    name: mysql-slave
---
apiVersion: v1
kind: Service
metadata:
  name: nacos-headless
  labels:
    app: nacos-headless
spec:
  ports:
    - port: 8848
      name: server
      targetPort: 8848
      nodePort: 30000
  selector:
    app: nacos
  type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-master
  labels:
    name: mysql-master
spec:
  serviceName: mysql-master
  replicas: 1
  selector:
    matchLabels:
      name: mysql-master
  template:
    metadata:
      labels:
        name: mysql-master
    spec:
      nodeSelector:
        kubernetes.io/hostname: local1
      containers:
        - name: master
          image: nacos/nacos-mysql-master:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3306
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: tz
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.root.password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.db.name
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.user
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.password
            - name: MYSQL_REPLICATION_USER
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.replication.user
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.replication.password
          resources:
            limits:
              memory: 256M
            requests:
              memory: 128M
          volumeMounts:
            - name: mysql-master-data
              mountPath: /var/lib/mysql
            - name: mysqlconf
              mountPath: /etc/mysql/conf.d/mysqld.cnf
      volumes:
        - name: mysql-master-data
          hostPath:
            path: /root/deploy/nacos/mysql-master
        - name: mysqlconf
          configMap:
            name: mysql-cm
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-slave
  labels:
    name: mysql-slave
spec:
  serviceName: mysql-slave
  replicas: 1
  selector:
    matchLabels:
      name: mysql-slave
  template:
    metadata:
      labels:
        name: mysql-slave
    spec:
      nodeSelector:
        kubernetes.io/hostname: local2
      initContainers:
        - name: init-slave
          image: busybox
          command: ['sh', '-c', 'until nslookup mysql-master; do echo waiting for mysql-master; sleep 2; done;']
      containers:
        - name: slave
          image: nacos/nacos-mysql-slave:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3306
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: tz
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.root.password
            - name: MYSQL_REPLICATION_USER
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.replication.user
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.replication.password
          resources:
            limits:
              memory: 256M
            requests:
              memory: 128M
          volumeMounts:
            - name: mysql-slave-data
              mountPath: /var/lib/mysql
            - name: mysqlconf
              mountPath: /etc/mysql/conf.d/mysqld.cnf
      volumes:
        - name: mysql-slave-data
          hostPath:
            path: /root/deploy/nacos/mysql-slave
        - name: mysqlconf
          configMap:
            name: mysql-cm
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nacos
spec:
  serviceName: nacos-headless
  replicas: 2
  selector:
    matchLabels:
      app: nacos
  template:
    metadata:
      labels:
        app: nacos
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - nacos-headless
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: nacos-headless-log
          hostPath:
            path: /root/deploy/nacos/logs
      initContainers:
        - name: init-mysql-slave
          image: busybox
          command: ['sh', '-c', 'until nslookup mysql-slave; do echo waiting for mysql-slave; sleep 2; done;']
      containers:
        - name: k8snacos
          image: nacos/nacos-server:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "2G"
              cpu: "500m"
            limits:
              memory: "2G"
          ports:
            - containerPort: 8848
              name: client
          volumeMounts:
            - name: nacos-headless-log
              mountPath: /home/nacos/logs
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: tz
            - name: NACOS_REPLICAS
              value: "2"
            - name: MYSQL_MASTER_SERVICE_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.db.name
            - name: MYSQL_MASTER_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.port
            - name: MYSQL_SLAVE_SERVICE_PORT
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.slave.port
            - name: MYSQL_MASTER_SERVICE_USER
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.user
            - name: MYSQL_MASTER_SERVICE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: base-cm
                  key: mysql.master.password
            - name: NACOS_SERVER_PORT
              value: "8848"
            - name: PREFER_HOST_MODE
              value: "hostname"
            - name: NACOS_SERVERS
              value: "nacos-0.nacos-headless.default.svc.cluster.local:8848 nacos-1.nacos-headless.default.svc.cluster.local:8848"
