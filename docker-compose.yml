version: "3"
services:
  cdp-eurekaserver:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-eurekaserver:2.0.0-SNAPSHOT
    container_name: cdp-eurekaserver
    hostname: cdp-eurekaserver
    restart: on-failure
    networks:
      - cdp-net
    volumes:
      - /root/docker/logs/cdp:/logs
    ports:
      - 51000:51000

  cdp-configserver:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-configserver:2.0.0-SNAPSHOT
    container_name: cdp-configserver
    hostname: cdp-configserver
    restart: on-failure
    ports:
      - 51100:51100
    environment:
      spring.cloud.config.server.native.search-locations: file:/cdp-config
    volumes:
      - /root/docker/logs/cdp:/logs
      - D:/Source/myproject/cdp/cdp-cloud/cdp-config:/cdp-config
    networks:
      - cdp-net
    depends_on:
      - cdp-eurekaserver
      - cdp-rabbitmq

  cdp-zuulgateway:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-zuulgateway:2.0.0-SNAPSHOT
    container_name: cdp-zuulgateway
    hostname: cdp-zuulgateway
    restart: on-failure
    ports:
      - 9000:9000
    volumes:
      - /root/docker/logs/cdp:/logs
    networks:
      - cdp-net
    depends_on:
      - cdp-configserver
      - cdp-platform-mysql

  cdp-authserver:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-authserver:2.0.0-SNAPSHOT
    container_name: cdp-authserver
    hostname: cdp-authserver
    restart: on-failure
    ports:
      - 51400:51400
    volumes:
      - /root/docker/logs/cdp:/logs
    networks:
      - cdp-net
    depends_on:
      - cdp-configserver
      - cdp-redis
      - cdp-platform-mysql

  cdp-platformserver:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-platformserver:2.0.0-SNAPSHOT
    container_name: cdp-platformserver
    hostname: cdp-platformserver
    restart: on-failure
    volumes:
      - /root/docker/logs/cdp:/logs
    ports:
      - 51500:51500
    networks:
      - cdp-net
    depends_on:
      - cdp-configserver
      - cdp-redis
      - cdp-platform-mysql

  cdp-adminserver:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-adminserver:2.0.0-SNAPSHOT
    container_name: cdp-adminserver
    hostname: cdp-adminserver
    restart: on-failure
    volumes:
      - /root/docker/logs/cdp:/logs
    ports:
      - 51700:51700
    networks:
      - cdp-net
    depends_on:
      - cdp-zuulgateway

  cdp-sleuthserver:
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-sleuthserver:2.0.0-SNAPSHOT
    container_name: cdp-sleuthserver
    hostname: cdp-sleuthserver
    restart: on-failure
    volumes:
      - /root/docker/logs/cdp:/logs
    ports:
      - 52100:52100
    networks:
      - cdp-net
    depends_on:
      - cdp-configserver
      - cdp-platform-mysql

  # Run Elasticsearch instead of MySQL
  cdp-elasticsearch:
    image: openzipkin/zipkin-elasticsearch6
    container_name: cdp-elasticsearch
    hostname: cdp-elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - JAVA_OPTS=-Xms512m -Xmx512m
    # Uncomment to expose the storage port for testing
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - cdp-net

  cdp-zipkin:
    image: openzipkin/zipkin
    container_name: cdp-zipkin
    hostname: cdp-zipkin
    environment:
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=cdp-elasticsearch
#      - RABBIT_CONNECTION_TIMEOUT=60000
#      - RABBIT_VIRTUAL_HOST=/
#      - RABBIT_USE_SSL=false
#      - RABBIT_QUEUE=zipkin
      # Uncomment to see requests to and from elasticsearch
      # - ES_HTTP_LOGGING=BODY
      - RABBIT_ADDRESSES=cdp-rabbitmq:5672
      - RABBIT_USER=cdp
      - RABBIT_PASSWORD=local
    networks:
      - cdp-net
    depends_on:
      - cdp-elasticsearch
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410

  cdp-platform-mysql:
    container_name: cdp-platform-mysql
    hostname: cdp-platform-mysql
    image: registry.cn-hangzhou.aliyuncs.com/fosin/cdp-platform-mysql:2.0.0-SNAPSHOT
    build:
      context: ./docs/mysql
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: local
      TZ: Asia/Shanghai
    volumes:
      - /root/docker/mysql/cdp_platform/data:/var/lib/mysql
      - /root/docker/mysql/cdp_platform/mysqld.cnf:/etc/mysql/conf.d/mysqld.cnf
      - /root/docker/mysql/cdp_platform/logs:/var/log/mysql
    restart: on-failure
    ports:
      - 3306:3306
    networks:
      - cdp-net

  cdp-rabbitmq:
    container_name: cdp-rabbitmq
    hostname: cdp-rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_DEFAULT_USER: cdp
      RABBITMQ_DEFAULT_PASS: local
      RABBITMQ_DEFAULT_VHOST: /
      TZ: Asia/Shanghai
    #    volumes: TODO 启动后报错cookie file /var/lib/rabbitmq/.erlang.cookie must be accessible by owner only
    #      - /root/docker/rabbitmq:/var/lib/rabbitmq
    restart: on-failure
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - cdp-net

  cdp-nginx:
    container_name: cdp-nginx
    image: nginx:1.15
    hostname: cdp-nginx
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /root/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /root/docker/nginx/html:/usr/share/nginx/html
    ports:
      - 80:80
    networks:
      - cdp-net

  cdp-redis:
    image: redis:4.0
    container_name: cdp-redis
    hostname: cdp-redis
    environment:
      TZ: Asia/Shanghai
    volumes:
      - /root/docker/redis:/data
    restart: on-failure
    ports:
      - 6379:6379
    command: redis-server --appendonly yes --requirepass local
    networks:
      - cdp-net

networks:
  cdp-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16